version: 2
jobs:
  build:
    docker:
    - image: circleci/golang:1.12
    working_directory: /tmp/octopus
    parallelism: 2
    steps:
    - checkout
    - restore_cache:
        keys:
        - go-mod-v3-{{ checksum "go.sum" }}
    - run:
        name: Install linter
        command: |
          GO111MODULE=on go get github.com/golangci/golangci-lint/cmd/golangci-lint@v1.16.0
    - run:
        command: make
    - run:
        name: List built binaries
        command: |
          pwd
          ls -l ./bin/
    - save_cache:
        key: go-mod-v3-{{ checksum "go.sum" }}
        paths:
        - /go/pkg/mod
    - persist_to_workspace:
        root: bin
        paths:
        - pushd
        - spotlightd
  test_migrations:
    docker:
    - image: circleci/golang:1.12
      environment:
        PG_ADDR: localhost:5432
        PG_USER: postgres
        PG_USER_PW: postgres
        PG_DB_NAME: trudb
    - image: postgres:11.1
      environment:
        POSTGRES_DB: trudb
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
    steps:
    - checkout
    - run:
        name: Test Migrations
        command: |
          make db_init
          make db_version
          make db_migrate
          make db_reset
          make db_version
          make db_migrate
          make db_version
  deploy:
    docker:
    - image: circleci/golang:1.12
    working_directory: /tmp/octopus
    steps:
    - add_ssh_keys:
        fingerprints:
        - 73:b6:96:34:a1:e8:b6:2e:b2:d1:6a:73:e0:ad:8b:3e
    - attach_workspace:
        at: /tmp/octopus/bin
    - run:
        name: List built binaries
        command: |
          pwd
          ls -l ./bin/
    - run:
        name: Deploy
        command: "if [ \"${CIRCLE_BRANCH}\" == \"master\" ]; then\n    mkdir ~/.ssh\n\
          \    ssh-keyscan $VENICE4_HOST >> ~/.ssh/known_hosts\n    scp bin/pushd\
          \ \"$VENICE4_USER@$VENICE4_HOST:$DEPLOY_LOCATION/pushd\"\n    ssh $VENICE4_USER@$VENICE4_HOST\
          \ \"cd $SERVICE_LOCATION && docker-compose up --build -d pushd\"\n    echo\
          \ \"deploying to venice4\"\nelif [ \"${CIRCLE_BRANCH}\" == \"develop\" ]\n\
          then\n   \n    mkdir ~/.ssh\n    ssh-keyscan $DEVNET_HOST >> ~/.ssh/known_hosts\n\
          \    scp bin/pushd \"$DEVNET_USER@$DEVNET_HOST:$DEPLOY_LOCATION/pushd\"\n\
          \    ssh $DEVNET_USER@$DEVNET_HOST \"cd $SERVICE_LOCATION && docker-compose\
          \ up --build -d pushd\"\n    echo \"deployed to devnet\"\nfi\n"
  db_dump:
    docker:
      - image:  jbergknoff/postgresql-client
    # working_directory: /tmp/octopus/demo
    steps:
      - run:
          name: Prepare DB
          command: |
            echo "trudb-test.c7hztfkcupe9.us-west-1.rds.amazonaws.com:5432:trudb:truadmin:trustory123" > ~/.pgpass
            chmod 600 ~/.pgpass
      - run: pg_dump -U truadmin -h trudb-test.c7hztfkcupe9.us-west-1.rds.amazonaws.com -p 5432 trudb > test.db
      - run: cat test.db
workflows:
  version: 2
  build-workflow:
    jobs:
    - build
    - test_migrations
    - deploy:
        filters:
          branches:
            only:
            - master
            - develop
        requires:
        - build
        - test_migrations
